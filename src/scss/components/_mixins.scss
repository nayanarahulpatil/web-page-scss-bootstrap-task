@mixin borderright($width , $color){
    border-right: $width solid $color ;
}
@mixin border($width , $color){
   border: $width solid $color ;
}
@mixin borderradius($borderradius){
   -webkit-border-radius:$borderradius;
   -moz-border-radius:$borderradius;
   border-radius: $borderradius;
}
@mixin transform($property){
   transform: $property;
   -webkit-transform:$property;
   -moz-transform: $property;
}
$breakpoints: (
	'custom-small-mobile-max': (max-width: 359px),
	'portrait-mobile-max': (max-width: 575px),
	'mobile-min': (min-width: 576px),
	'mobile-max': (max-width: 467px),
	'ipad-min': (min-width: 768px),
	'ipad-max': (max-width: 991px),
	'desktop-min': (min-width: 992px),
	'desktop-max': (max-width: 1199px),
	'large-desktop-min': (min-width: 1200px),
	'medium-large-desktop-min': (min-width: 1366px),
	'medium-large-desktop-max': (max-width: 1400px),
);

@mixin respond-to($name) {
	@if map-has-key($breakpoints, $name) {
		@media #{inspect(map-get($breakpoints, $name))} {
      		@content;
		}
	}
  	@else {
    	@warn "Couldn't find a breakpoint named `#{$name}`.";
  	}
}